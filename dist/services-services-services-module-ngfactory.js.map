{"version":3,"sources":["webpack:///./src/app/pages/services/service/services.service.ts","webpack:///./src/app/pages/services/services.component.html","webpack:///./src/app/pages/services/services.component.ts","webpack:///./src/app/pages/services/services/services.module.ts"],"names":[],"mappings":"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","file":"services-services-services-module-ngfactory.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ServiceModal } from '../modal/service-modal';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n\n  headers = new HttpHeaders();\n  constructor(private http: HttpClient) { \n   \n  } \n\n  private setwithImageHeaders(): HttpHeaders {\n\n    let headersConfig =\n      {\n        'Content-Type': 'multipart/form-data;charset=utf-8; boundary=' + Math.random().toString().substr(2),\n        'Accept': 'application/json',\n      };\n    return new HttpHeaders(headersConfig);\n  }\n  \n  upload( uploadFile: Object) {\n    console.log(this.setwithImageHeaders())\n    return this.http.post(`http://fakrah.com/api/upload/image`, uploadFile,{ headers: this.setwithImageHeaders() })\n  }\n  getservice(): Observable<object> {\n    return this.http.get(`http://fakrah.com/dashboard/service-provider-service`);\n}\n\npostservice(service:ServiceModal) {\n  return this.http.post(`http://fakrah.com/dashboard/service-provider-service`,service);\n}\n\nonuploadSubmit(filedata):Observable<object>{ \n    this.headers.append('Accept', 'application/json',);\n    return this.http.post('http://fakrah.com/api/upload/image', filedata, {headers: this.headers});\n\n}\n\n}\n","<div class=\"row\">\r\n  <div class=\"col-md-12\">\r\n    <!-- <button class=\"btn btn-primary\" (click)=\"seventhModal.open()\">أضافة  خدمة</button> -->\r\n    <br>\r\n    <br>\r\n    <div class=\"row\">\r\n    \r\n      <div class=\"col-md-6\" *ngFor=\"let item of result\">\r\n        <div id=\"text-output\">\r\n          <h3 style=\"color:brown\">{{item.id}}/{{item.title}}</h3>\r\n          <p>\r\n            {{item.description}}\r\n          </p>\r\n          <img style=\"border: brown;\" [src]=\"item.image\">\r\n          <h4><span style=\"color:red\">الخصم:</span> {{item.discount}}</h4>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- \r\n<modal #seventhModal >\r\n  <modal-header>\r\n    <h3>أضافة عميل</h3>\r\n  </modal-header>\r\n  <modal-content>\r\n    <form [formGroup]=\"providerForm\" >\r\n    <label class=\"control-label\">الأسم</label>\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"name\" placeholder=\"Text Input\">\r\n    <br>\r\n    <label class=\"control-label\">الايميل</label>\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"email\"  placeholder=\"Text Input\">\r\n    <br>\r\n    <label class=\"control-label\">الباسورد</label>\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"password\"   placeholder=\"Text Input\">\r\n    <br>\r\n    <label class=\"control-label\">التليفون</label>\r\n    <input type=\"text\" class=\"form-control\" formControlName=\"phone\"  placeholder=\"Text Input\">\r\n    <br>\r\n    <div class=\"form-group\">\r\n      <label class=\"control-label\">البلاد</label>\r\n      <select name=\"select\" formControlName=\"country\"  id=\"select1\" class=\"form-control\" (ngModelChange)=\"onSelecttype($event)\">\r\n        <option *ngFor=\"let countries of country\" [value]=\"countries.name\" >{{countries.name}}</option>\r\n        \r\n   \r\n      </select>\r\n     \r\n    </div>\r\n    <br>\r\n    <div class=\"form-group\">\r\n      <label class=\"control-label\">المدن</label>\r\n      <select name=\"select\" formControlName=\"city\"  id=\"select2\" class=\"form-control\">\r\n        <option *ngFor=\"let cities of city\" [value]=\"cities.name\" >{{cities.name}}</option>\r\n      \r\n      </select>\r\n     \r\n    </div>\r\n    <br>\r\n    <div class=\"form-group\">\r\n      <label>الصورة</label><br>\r\n      <label class=\"image-upload-container btn btn-success btn-xl\">\r\n          <div class=\"uploadPhoto\"> <span class=\"glyphicon glyphicon-upload\"></span> &nbsp; Uplaod photo....</div>\r\n          <input type=\"file\" accept=\"image/*\" formControlName=\"image\" #fileupload (change)=\"fileEvent($event)\" style=\"display: none;\">\r\n      </label>\r\n  </div>\r\n\r\n  </form>\r\n  </modal-content>\r\n  <modal-footer>\r\n    <button class=\"btn btn-primary\" (click)=\"addprovider()\">حفظ</button>\r\n    <button class=\"btn btn-danger\" (click)=\"closeModal(seventhModal)\">غلق</button>\r\n  </modal-footer>\r\n</modal> -->","import { Component, OnInit } from '@angular/core';\r\nimport { ServicesService } from './service/services.service';\r\n\r\n@Component({\r\n  selector: 'app-services',\r\n  templateUrl: './services.component.html',\r\n  styleUrls: ['./services.component.scss']\r\n})\r\nexport class ServicesComponent implements OnInit {\r\nresult:any[]=[]\r\n  constructor( private Service:ServicesService) { }\r\n\r\n  ngOnInit() {\r\n    this.Service.getservice().subscribe(\r\n      response=>\r\n      {\r\n        console.log(response)\r\n        this.result=response[\"data\"]\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ModalModule } from 'ngx-modal';\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { ServicesComponent } from '../services.component';\r\n\r\n\r\n\r\n\r\nconst childRoutes: Routes = [\r\n  {\r\n      path: '',\r\n      component:ServicesComponent\r\n  } \r\n];\r\n\r\nexport const routing = RouterModule.forChild(childRoutes);\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n  routing,\r\n  ModalModule\r\n\r\n],\r\ndeclarations: [\r\n  ServicesComponent\r\n]\r\n})\r\nexport class ServicesModule { }\r\n"],"sourceRoot":""}