{"version":3,"sources":["webpack:///./src/app/pages/category/service/category.service.ts","webpack:///./src/app/pages/cities/service/city.service.ts","webpack:///./src/app/pages/clients/service/clients.service.ts","webpack:///./src/app/pages/country/service/country.service.ts","webpack:///./src/app/pages/service-provider/service/service-provider.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CategoryModel } from '../model/category-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoryService {\r\n\r\n \r\n  constructor(private http: HttpClient) { \r\n   \r\n  } \r\n\r\n  getcategory(): Observable<object> {\r\n    return this.http.get(`http://fakrah.com/dashboard/category`);\r\n }\r\n\r\npostcategory(client:CategoryModel) {\r\n  return this.http.post(`http://fakrah.com/dashboard/category`,client);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CityModel } from '../model/city-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n\r\n   \r\n  constructor(private http: HttpClient) { \r\n   \r\n  }\r\n\r\n  getcity(): Observable<object> {\r\n    return this.http.get(`http://fakrah.com/dashboard/cities`);\r\n}\r\n\r\npostcity(city:CityModel) {\r\n  return this.http.post(`http://fakrah.com/dashboard/cities`,city);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ClientsModel } from '../model/clients-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClientsService {\r\n\r\n  constructor(private http: HttpClient) { \r\n   \r\n  } \r\n\r\n  getclients(): Observable<object> {\r\n    return this.http.get(`http://fakrah.com/dashboard/clients`);\r\n}\r\n\r\npostclients(client:ClientsModel) {\r\n  return this.http.post(`http://fakrah.com/dashboard/clients`,client);\r\n}\r\ngetcity(): Observable<object> {\r\n  return this.http.get(`http://fakrah.com/dashboard/cities`);\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CountryModel } from '../model/country-model';\r\n// import { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CountryService {\r\n  \r\n\r\n \r\n  constructor(private http: HttpClient) { \r\n   \r\n  }\r\n\r\n  getcountry(): Observable<object> {\r\n    return this.http.get(`http://fakrah.com/dashboard/countries`);\r\n}\r\n\r\npostcountry(country:CountryModel) {\r\n  return this.http.post(`http://fakrah.com/dashboard/countries`,country);\r\n}\r\n}\r\n","\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ServiceProviderModel } from '../model/service-provider-model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceProviderService {\r\n  headers = new HttpHeaders();\r\n  constructor(private http: HttpClient) { \r\n   \r\n  } \r\n\r\n  private setwithImageHeaders(): HttpHeaders {\r\n\r\n    let headersConfig =\r\n      {\r\n        'Content-Type': 'multipart/form-data;charset=utf-8; boundary=' + Math.random().toString().substr(2),\r\n        'Accept': 'application/json',\r\n      };\r\n    return new HttpHeaders(headersConfig);\r\n  }\r\n  \r\n  upload( uploadFile: Object) {\r\n    console.log(this.setwithImageHeaders())\r\n    return this.http.post(`http://fakrah.com/api/upload/image`, uploadFile,{ headers: this.setwithImageHeaders() })\r\n  }\r\n  getprovider(): Observable<object> {\r\n    return this.http.get(`http://fakrah.com/dashboard/service-provider`);\r\n}\r\n\r\npostprovider(provider:ServiceProviderModel) {\r\n  return this.http.post(`http://fakrah.com/dashboard/service-provider`,provider);\r\n}\r\n\r\nonuploadSubmit(filedata):Observable<object>{ \r\n    this.headers.append('Accept', 'application/json',);\r\n    return this.http.post('http://fakrah.com/api/upload/image', filedata, {headers: this.headers});\r\n\r\n}\r\n\r\n}\r\n"],"sourceRoot":""}